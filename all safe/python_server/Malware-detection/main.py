from flask import Flask, request, jsonify
from flask_cors import CORS
import os
import uuid
from joblib import load
from extract import extract_infos
from sklearn.preprocessing import StandardScaler
import pandas as pd

app = Flask(__name__)
CORS(app)

dataset = pd.read_csv('data.csv', sep='|')
X = dataset.drop(['Name', 'md5', 'legitimate'], axis=1).values
y = dataset['legitimate'].values
classifier = load("malware_detection_classifier.joblib")
sc = StandardScaler()
sc.fit(X)

def check_malware(path):
    x_data = extract_infos(path)
    standardized_data = sc.transform([x_data[2:]])
    result = classifier.predict(standardized_data)
    return 'benign' if result[0] == 1 else 'malware'

def check_malware2(path):
    x_data = extract_infos(path)
    standardized_data = sc.transform([x_data[2:]])
    result = classifier.predict_proba(standardized_data)
    if result[0][0] > 0.5:
        return f"Safe ({result[0][0] * 100:.2f}%)"
    else:
        return f"Malware not safe ({result[0][1] * 100:.2f}%)"

@app.route('/malware_detection', methods=['POST'])
def receive_data():
    if 'file' not in request.files:
        return jsonify({'status': 'error', 'message': 'No file provided'}), 400
    
    f = request.files['file']
    uploads_dir = 'uploads'
    
    if not os.path.exists(uploads_dir):
        os.makedirs(uploads_dir)
    
    output_name = os.path.join(uploads_dir, uuid.uuid4().hex + os.path.splitext(f.filename)[1])
    try:
        f.save(output_name)
        result = check_malware2(output_name)
    except Exception as e:
        print(f"Exception occurred: {e}") 
        return jsonify({'status': 'error', 'message': str(e)}), 500
    finally:
        try:
            if os.path.exists(output_name):
                os.remove(output_name)
        except Exception as remove_error:
            print(f"Error removing file: {remove_error}")
    return jsonify({'status': 'success', 'result': result})

if __name__ == '__main__':
    app.run(debug=False, port=5001)
